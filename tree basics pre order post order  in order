#include<iostream>
using namespace std;

// 8 10 1 -1 -1 6 4 -1 -1 7 -1 -1 3 -1 4 13 -1 -1 -1
class node{
public:
	int data;
	node*left;
	node*right;
	 node(int d)
	{
		data=d;
		left=NULL;
		right=NULL;
	}
};
//creating tree by pre order traversal
 node* ct(){
	node*root=NULL;
	int data;
	cin>>data;
	if(data==-1){
return root;
	}
 root=new node(data);
 // call rec for left 
root->left=ct();
// call rec for right subtree
root->right=ct();
return root;
}

void pre(node*root){ //print in preorder
	if(root==NULL){
		return;
	}
	// print subtree by rec
	// in preoder root ,left ,right
	//root
	cout<<root->data<<" ";
//left 
	pre(root->left);
	//right
	pre(root->right);
}

void ino(node*root){// print inorder
if(root==NULL){
		return;
	}
	// in inorder left,root, right
	//left
	ino(root->left);
	//root
	cout<<root->data<<" ";
	// right
	ino(root->right);
}

void post(node*root){ //print in postorder
	if(root==NULL){
		return;
	}
	// print subtree by rec
	// in postoder left ,right ,root
	//left 
	post(root->left);
	//right
	post(root->right);
	//root
	cout<<root->data<<" ";

}

int main(){
	node*root=ct();
	pre(root);
	cout<<endl;
	ino(root);
	cout<<endl;
	post(root);

}
