class Solution {
public:
    vector<vector<int>>ans;
    void helper(vector<int>& arr,int i,vector<int>& temp,int target){
        if(target==0){
            ans.push_back(temp);
            return;
        }
        if(target<0){
            return;
        }
        if(i==arr.size()){
            return;
        }
        //not include
        helper(arr,i+1,temp,target);
        //include
        temp.push_back(arr[i]);
        helper(arr,i,temp,target-arr[i]);
        temp.pop_back();
        
    }
    vector<vector<int>> combinationSum(vector<int>& arr, int target) {
      vector<int>temp;
        helper(arr,0,temp,target);
        return ans;
    }
    
    
};
