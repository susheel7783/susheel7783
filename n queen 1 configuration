#include<iostream>
using namespace std;
bool ispossibe(int board[][50],int i,int j,int n){
	for(int k=0;k<n;k++){
		if(board[k][j]==1 || board[i][k]==1){
			return false;
		}
	}
	//check right diagonal
	int x=i,y=j;

	while(i>=0 && j<n){
		if(board[i][j]==1)
			return false;
			i--;
			j++;
		}
		i=x,j=y;
		//check leftb diagonal
		while(i>=0 && j>=0){
			if(board[i][j]==1)
			return false;
			i--;
			j--;
		}
		return true;
	
}
   bool nqueen(int board[][50],int i,int n){
	if(i==n){
		for(int j=0;j<n;j++){
			for(int k=0;k<n;k++){
				cout<<board[j][k]<<" ";
			}
			cout<<endl;
		}
		return 1;
	}
	//recusrsibve case
	for(int j=0;j<n;j++){
		if(ispossibe(board,i,j,n)){
			board[i][j]=1;
			bool kyabakipossiblehai=nqueen(board,i+1,n);
			if(kyabakipossiblehai){
				return true;
			}
			board[i][j]=0;    //if not true
		}
	}
	return false;
}
int main() {
	int n;
	cin>>n;
		int board[50][50]={0};
		nqueen(board,0,n);
	
	return 0;
}
